//------------------------------------------------------------------------------
// <auto-generated>
//     這段程式碼是由工具產生的。
//     執行階段版本:4.0.30319.42000
//
//     對這個檔案所做的變更可能會造成錯誤的行為，而且如果重新產生程式碼，
//     變更將會遺失。
// </auto-generated>
//------------------------------------------------------------------------------

// 
// 原始程式碼已由 Microsoft.VSDesigner 自動產生，版本 4.0.30319.42000。
// 
#pragma warning disable 1591

namespace DoorGodWeb.security02 {
    using System;
    using System.Web.Services;
    using System.Diagnostics;
    using System.Web.Services.Protocols;
    using System.Xml.Serialization;
    using System.ComponentModel;
    
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Web.Services.WebServiceBindingAttribute(Name="CMSWebServiceSoap", Namespace="http://www.websystem.com.tw/")]
    public partial class CMSWebService : System.Web.Services.Protocols.SoapHttpClientProtocol {
        
        private System.Threading.SendOrPostCallback SetDeptOperationCompleted;
        
        private System.Threading.SendOrPostCallback SetEmpOperationCompleted;
        
        private System.Threading.SendOrPostCallback DeleteEmpOperationCompleted;
        
        private System.Threading.SendOrPostCallback SetEmpCardOperationCompleted;
        
        private System.Threading.SendOrPostCallback SetEmpTempCardOperationCompleted;
        
        private System.Threading.SendOrPostCallback SetExtEngineerCardOperationCompleted;
        
        private System.Threading.SendOrPostCallback SetExtCompanyCardOperationCompleted;
        
        private System.Threading.SendOrPostCallback AddCarPassportOperationCompleted;
        
        private System.Threading.SendOrPostCallback DeleteCarPassportOperationCompleted;
        
        private System.Threading.SendOrPostCallback DeleteAllCarPassportOperationCompleted;
        
        private System.Threading.SendOrPostCallback AddGroupEmpsOperationCompleted;
        
        private System.Threading.SendOrPostCallback DeleteGroupEmpsOperationCompleted;
        
        private System.Threading.SendOrPostCallback SetCardStateOperationCompleted;
        
        private System.Threading.SendOrPostCallback AddCardStockInOperationCompleted;
        
        private System.Threading.SendOrPostCallback DeleteCardStockInOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetEmpGroupOperationCompleted;
        
        private bool useDefaultCredentialsSetExplicitly;
        
        /// <remarks/>
        public CMSWebService() {
            this.Url = global::DoorGodWeb.Properties.Settings.Default.DoorGodWeb_security02_CMSWebService;
            if ((this.IsLocalFileSystemWebService(this.Url) == true)) {
                this.UseDefaultCredentials = true;
                this.useDefaultCredentialsSetExplicitly = false;
            }
            else {
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        public new string Url {
            get {
                return base.Url;
            }
            set {
                if ((((this.IsLocalFileSystemWebService(base.Url) == true) 
                            && (this.useDefaultCredentialsSetExplicitly == false)) 
                            && (this.IsLocalFileSystemWebService(value) == false))) {
                    base.UseDefaultCredentials = false;
                }
                base.Url = value;
            }
        }
        
        public new bool UseDefaultCredentials {
            get {
                return base.UseDefaultCredentials;
            }
            set {
                base.UseDefaultCredentials = value;
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        /// <remarks/>
        public event SetDeptCompletedEventHandler SetDeptCompleted;
        
        /// <remarks/>
        public event SetEmpCompletedEventHandler SetEmpCompleted;
        
        /// <remarks/>
        public event DeleteEmpCompletedEventHandler DeleteEmpCompleted;
        
        /// <remarks/>
        public event SetEmpCardCompletedEventHandler SetEmpCardCompleted;
        
        /// <remarks/>
        public event SetEmpTempCardCompletedEventHandler SetEmpTempCardCompleted;
        
        /// <remarks/>
        public event SetExtEngineerCardCompletedEventHandler SetExtEngineerCardCompleted;
        
        /// <remarks/>
        public event SetExtCompanyCardCompletedEventHandler SetExtCompanyCardCompleted;
        
        /// <remarks/>
        public event AddCarPassportCompletedEventHandler AddCarPassportCompleted;
        
        /// <remarks/>
        public event DeleteCarPassportCompletedEventHandler DeleteCarPassportCompleted;
        
        /// <remarks/>
        public event DeleteAllCarPassportCompletedEventHandler DeleteAllCarPassportCompleted;
        
        /// <remarks/>
        public event AddGroupEmpsCompletedEventHandler AddGroupEmpsCompleted;
        
        /// <remarks/>
        public event DeleteGroupEmpsCompletedEventHandler DeleteGroupEmpsCompleted;
        
        /// <remarks/>
        public event SetCardStateCompletedEventHandler SetCardStateCompleted;
        
        /// <remarks/>
        public event AddCardStockInCompletedEventHandler AddCardStockInCompleted;
        
        /// <remarks/>
        public event DeleteCardStockInCompletedEventHandler DeleteCardStockInCompleted;
        
        /// <remarks/>
        public event GetEmpGroupCompletedEventHandler GetEmpGroupCompleted;
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.websystem.com.tw/SetDept", RequestNamespace="http://www.websystem.com.tw/", ResponseNamespace="http://www.websystem.com.tw/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int SetDept(string UserName, string DeptNo, string DeptName, string ParentDeptNO) {
            object[] results = this.Invoke("SetDept", new object[] {
                        UserName,
                        DeptNo,
                        DeptName,
                        ParentDeptNO});
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void SetDeptAsync(string UserName, string DeptNo, string DeptName, string ParentDeptNO) {
            this.SetDeptAsync(UserName, DeptNo, DeptName, ParentDeptNO, null);
        }
        
        /// <remarks/>
        public void SetDeptAsync(string UserName, string DeptNo, string DeptName, string ParentDeptNO, object userState) {
            if ((this.SetDeptOperationCompleted == null)) {
                this.SetDeptOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSetDeptOperationCompleted);
            }
            this.InvokeAsync("SetDept", new object[] {
                        UserName,
                        DeptNo,
                        DeptName,
                        ParentDeptNO}, this.SetDeptOperationCompleted, userState);
        }
        
        private void OnSetDeptOperationCompleted(object arg) {
            if ((this.SetDeptCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SetDeptCompleted(this, new SetDeptCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.websystem.com.tw/SetEmp", RequestNamespace="http://www.websystem.com.tw/", ResponseNamespace="http://www.websystem.com.tw/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int SetEmp(string UserName, string EmpNo, string[] EmpInfo) {
            object[] results = this.Invoke("SetEmp", new object[] {
                        UserName,
                        EmpNo,
                        EmpInfo});
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void SetEmpAsync(string UserName, string EmpNo, string[] EmpInfo) {
            this.SetEmpAsync(UserName, EmpNo, EmpInfo, null);
        }
        
        /// <remarks/>
        public void SetEmpAsync(string UserName, string EmpNo, string[] EmpInfo, object userState) {
            if ((this.SetEmpOperationCompleted == null)) {
                this.SetEmpOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSetEmpOperationCompleted);
            }
            this.InvokeAsync("SetEmp", new object[] {
                        UserName,
                        EmpNo,
                        EmpInfo}, this.SetEmpOperationCompleted, userState);
        }
        
        private void OnSetEmpOperationCompleted(object arg) {
            if ((this.SetEmpCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SetEmpCompleted(this, new SetEmpCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.websystem.com.tw/DeleteEmp", RequestNamespace="http://www.websystem.com.tw/", ResponseNamespace="http://www.websystem.com.tw/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int DeleteEmp(string UserName, string EmpNo) {
            object[] results = this.Invoke("DeleteEmp", new object[] {
                        UserName,
                        EmpNo});
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void DeleteEmpAsync(string UserName, string EmpNo) {
            this.DeleteEmpAsync(UserName, EmpNo, null);
        }
        
        /// <remarks/>
        public void DeleteEmpAsync(string UserName, string EmpNo, object userState) {
            if ((this.DeleteEmpOperationCompleted == null)) {
                this.DeleteEmpOperationCompleted = new System.Threading.SendOrPostCallback(this.OnDeleteEmpOperationCompleted);
            }
            this.InvokeAsync("DeleteEmp", new object[] {
                        UserName,
                        EmpNo}, this.DeleteEmpOperationCompleted, userState);
        }
        
        private void OnDeleteEmpOperationCompleted(object arg) {
            if ((this.DeleteEmpCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.DeleteEmpCompleted(this, new DeleteEmpCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.websystem.com.tw/SetEmpCard", RequestNamespace="http://www.websystem.com.tw/", ResponseNamespace="http://www.websystem.com.tw/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int SetEmpCard(string UserName, string EmpNo, string CardNo, string CardState) {
            object[] results = this.Invoke("SetEmpCard", new object[] {
                        UserName,
                        EmpNo,
                        CardNo,
                        CardState});
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void SetEmpCardAsync(string UserName, string EmpNo, string CardNo, string CardState) {
            this.SetEmpCardAsync(UserName, EmpNo, CardNo, CardState, null);
        }
        
        /// <remarks/>
        public void SetEmpCardAsync(string UserName, string EmpNo, string CardNo, string CardState, object userState) {
            if ((this.SetEmpCardOperationCompleted == null)) {
                this.SetEmpCardOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSetEmpCardOperationCompleted);
            }
            this.InvokeAsync("SetEmpCard", new object[] {
                        UserName,
                        EmpNo,
                        CardNo,
                        CardState}, this.SetEmpCardOperationCompleted, userState);
        }
        
        private void OnSetEmpCardOperationCompleted(object arg) {
            if ((this.SetEmpCardCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SetEmpCardCompleted(this, new SetEmpCardCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.websystem.com.tw/SetEmpTempCard", RequestNamespace="http://www.websystem.com.tw/", ResponseNamespace="http://www.websystem.com.tw/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int SetEmpTempCard(string UserName, string EmpNo, string CardNo, string CardState) {
            object[] results = this.Invoke("SetEmpTempCard", new object[] {
                        UserName,
                        EmpNo,
                        CardNo,
                        CardState});
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void SetEmpTempCardAsync(string UserName, string EmpNo, string CardNo, string CardState) {
            this.SetEmpTempCardAsync(UserName, EmpNo, CardNo, CardState, null);
        }
        
        /// <remarks/>
        public void SetEmpTempCardAsync(string UserName, string EmpNo, string CardNo, string CardState, object userState) {
            if ((this.SetEmpTempCardOperationCompleted == null)) {
                this.SetEmpTempCardOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSetEmpTempCardOperationCompleted);
            }
            this.InvokeAsync("SetEmpTempCard", new object[] {
                        UserName,
                        EmpNo,
                        CardNo,
                        CardState}, this.SetEmpTempCardOperationCompleted, userState);
        }
        
        private void OnSetEmpTempCardOperationCompleted(object arg) {
            if ((this.SetEmpTempCardCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SetEmpTempCardCompleted(this, new SetEmpTempCardCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.websystem.com.tw/SetExtEngineerCard", RequestNamespace="http://www.websystem.com.tw/", ResponseNamespace="http://www.websystem.com.tw/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int SetExtEngineerCard(string UserName, string CardNo, string[] EmpInfo, string CardState) {
            object[] results = this.Invoke("SetExtEngineerCard", new object[] {
                        UserName,
                        CardNo,
                        EmpInfo,
                        CardState});
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void SetExtEngineerCardAsync(string UserName, string CardNo, string[] EmpInfo, string CardState) {
            this.SetExtEngineerCardAsync(UserName, CardNo, EmpInfo, CardState, null);
        }
        
        /// <remarks/>
        public void SetExtEngineerCardAsync(string UserName, string CardNo, string[] EmpInfo, string CardState, object userState) {
            if ((this.SetExtEngineerCardOperationCompleted == null)) {
                this.SetExtEngineerCardOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSetExtEngineerCardOperationCompleted);
            }
            this.InvokeAsync("SetExtEngineerCard", new object[] {
                        UserName,
                        CardNo,
                        EmpInfo,
                        CardState}, this.SetExtEngineerCardOperationCompleted, userState);
        }
        
        private void OnSetExtEngineerCardOperationCompleted(object arg) {
            if ((this.SetExtEngineerCardCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SetExtEngineerCardCompleted(this, new SetExtEngineerCardCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.websystem.com.tw/SetExtCompanyCard", RequestNamespace="http://www.websystem.com.tw/", ResponseNamespace="http://www.websystem.com.tw/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int SetExtCompanyCard(string UserName, string CardNo, string CardState) {
            object[] results = this.Invoke("SetExtCompanyCard", new object[] {
                        UserName,
                        CardNo,
                        CardState});
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void SetExtCompanyCardAsync(string UserName, string CardNo, string CardState) {
            this.SetExtCompanyCardAsync(UserName, CardNo, CardState, null);
        }
        
        /// <remarks/>
        public void SetExtCompanyCardAsync(string UserName, string CardNo, string CardState, object userState) {
            if ((this.SetExtCompanyCardOperationCompleted == null)) {
                this.SetExtCompanyCardOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSetExtCompanyCardOperationCompleted);
            }
            this.InvokeAsync("SetExtCompanyCard", new object[] {
                        UserName,
                        CardNo,
                        CardState}, this.SetExtCompanyCardOperationCompleted, userState);
        }
        
        private void OnSetExtCompanyCardOperationCompleted(object arg) {
            if ((this.SetExtCompanyCardCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SetExtCompanyCardCompleted(this, new SetExtCompanyCardCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.websystem.com.tw/AddCarPassport", RequestNamespace="http://www.websystem.com.tw/", ResponseNamespace="http://www.websystem.com.tw/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int AddCarPassport(string UserName, string SetNo, string[] EmpNoList, string StartDate, string EndDate, int CarType) {
            object[] results = this.Invoke("AddCarPassport", new object[] {
                        UserName,
                        SetNo,
                        EmpNoList,
                        StartDate,
                        EndDate,
                        CarType});
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void AddCarPassportAsync(string UserName, string SetNo, string[] EmpNoList, string StartDate, string EndDate, int CarType) {
            this.AddCarPassportAsync(UserName, SetNo, EmpNoList, StartDate, EndDate, CarType, null);
        }
        
        /// <remarks/>
        public void AddCarPassportAsync(string UserName, string SetNo, string[] EmpNoList, string StartDate, string EndDate, int CarType, object userState) {
            if ((this.AddCarPassportOperationCompleted == null)) {
                this.AddCarPassportOperationCompleted = new System.Threading.SendOrPostCallback(this.OnAddCarPassportOperationCompleted);
            }
            this.InvokeAsync("AddCarPassport", new object[] {
                        UserName,
                        SetNo,
                        EmpNoList,
                        StartDate,
                        EndDate,
                        CarType}, this.AddCarPassportOperationCompleted, userState);
        }
        
        private void OnAddCarPassportOperationCompleted(object arg) {
            if ((this.AddCarPassportCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.AddCarPassportCompleted(this, new AddCarPassportCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.websystem.com.tw/DeleteCarPassport", RequestNamespace="http://www.websystem.com.tw/", ResponseNamespace="http://www.websystem.com.tw/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int DeleteCarPassport(string UserName, string SetNo, string[] EmpNoList, string StartDate, int CarType) {
            object[] results = this.Invoke("DeleteCarPassport", new object[] {
                        UserName,
                        SetNo,
                        EmpNoList,
                        StartDate,
                        CarType});
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void DeleteCarPassportAsync(string UserName, string SetNo, string[] EmpNoList, string StartDate, int CarType) {
            this.DeleteCarPassportAsync(UserName, SetNo, EmpNoList, StartDate, CarType, null);
        }
        
        /// <remarks/>
        public void DeleteCarPassportAsync(string UserName, string SetNo, string[] EmpNoList, string StartDate, int CarType, object userState) {
            if ((this.DeleteCarPassportOperationCompleted == null)) {
                this.DeleteCarPassportOperationCompleted = new System.Threading.SendOrPostCallback(this.OnDeleteCarPassportOperationCompleted);
            }
            this.InvokeAsync("DeleteCarPassport", new object[] {
                        UserName,
                        SetNo,
                        EmpNoList,
                        StartDate,
                        CarType}, this.DeleteCarPassportOperationCompleted, userState);
        }
        
        private void OnDeleteCarPassportOperationCompleted(object arg) {
            if ((this.DeleteCarPassportCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.DeleteCarPassportCompleted(this, new DeleteCarPassportCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.websystem.com.tw/DeleteAllCarPassport", RequestNamespace="http://www.websystem.com.tw/", ResponseNamespace="http://www.websystem.com.tw/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int DeleteAllCarPassport(string UserName, string SetNo, int CarType) {
            object[] results = this.Invoke("DeleteAllCarPassport", new object[] {
                        UserName,
                        SetNo,
                        CarType});
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void DeleteAllCarPassportAsync(string UserName, string SetNo, int CarType) {
            this.DeleteAllCarPassportAsync(UserName, SetNo, CarType, null);
        }
        
        /// <remarks/>
        public void DeleteAllCarPassportAsync(string UserName, string SetNo, int CarType, object userState) {
            if ((this.DeleteAllCarPassportOperationCompleted == null)) {
                this.DeleteAllCarPassportOperationCompleted = new System.Threading.SendOrPostCallback(this.OnDeleteAllCarPassportOperationCompleted);
            }
            this.InvokeAsync("DeleteAllCarPassport", new object[] {
                        UserName,
                        SetNo,
                        CarType}, this.DeleteAllCarPassportOperationCompleted, userState);
        }
        
        private void OnDeleteAllCarPassportOperationCompleted(object arg) {
            if ((this.DeleteAllCarPassportCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.DeleteAllCarPassportCompleted(this, new DeleteAllCarPassportCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.websystem.com.tw/AddGroupEmps", RequestNamespace="http://www.websystem.com.tw/", ResponseNamespace="http://www.websystem.com.tw/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int AddGroupEmps(string UserName, string GroupNo, string[] EmpNoList) {
            object[] results = this.Invoke("AddGroupEmps", new object[] {
                        UserName,
                        GroupNo,
                        EmpNoList});
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void AddGroupEmpsAsync(string UserName, string GroupNo, string[] EmpNoList) {
            this.AddGroupEmpsAsync(UserName, GroupNo, EmpNoList, null);
        }
        
        /// <remarks/>
        public void AddGroupEmpsAsync(string UserName, string GroupNo, string[] EmpNoList, object userState) {
            if ((this.AddGroupEmpsOperationCompleted == null)) {
                this.AddGroupEmpsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnAddGroupEmpsOperationCompleted);
            }
            this.InvokeAsync("AddGroupEmps", new object[] {
                        UserName,
                        GroupNo,
                        EmpNoList}, this.AddGroupEmpsOperationCompleted, userState);
        }
        
        private void OnAddGroupEmpsOperationCompleted(object arg) {
            if ((this.AddGroupEmpsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.AddGroupEmpsCompleted(this, new AddGroupEmpsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.websystem.com.tw/DeleteGroupEmps", RequestNamespace="http://www.websystem.com.tw/", ResponseNamespace="http://www.websystem.com.tw/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int DeleteGroupEmps(string UserName, string GroupNo, string[] EmpNoList) {
            object[] results = this.Invoke("DeleteGroupEmps", new object[] {
                        UserName,
                        GroupNo,
                        EmpNoList});
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void DeleteGroupEmpsAsync(string UserName, string GroupNo, string[] EmpNoList) {
            this.DeleteGroupEmpsAsync(UserName, GroupNo, EmpNoList, null);
        }
        
        /// <remarks/>
        public void DeleteGroupEmpsAsync(string UserName, string GroupNo, string[] EmpNoList, object userState) {
            if ((this.DeleteGroupEmpsOperationCompleted == null)) {
                this.DeleteGroupEmpsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnDeleteGroupEmpsOperationCompleted);
            }
            this.InvokeAsync("DeleteGroupEmps", new object[] {
                        UserName,
                        GroupNo,
                        EmpNoList}, this.DeleteGroupEmpsOperationCompleted, userState);
        }
        
        private void OnDeleteGroupEmpsOperationCompleted(object arg) {
            if ((this.DeleteGroupEmpsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.DeleteGroupEmpsCompleted(this, new DeleteGroupEmpsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.websystem.com.tw/SetCardState", RequestNamespace="http://www.websystem.com.tw/", ResponseNamespace="http://www.websystem.com.tw/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int SetCardState(string UserName, string TempNo, string CardState) {
            object[] results = this.Invoke("SetCardState", new object[] {
                        UserName,
                        TempNo,
                        CardState});
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void SetCardStateAsync(string UserName, string TempNo, string CardState) {
            this.SetCardStateAsync(UserName, TempNo, CardState, null);
        }
        
        /// <remarks/>
        public void SetCardStateAsync(string UserName, string TempNo, string CardState, object userState) {
            if ((this.SetCardStateOperationCompleted == null)) {
                this.SetCardStateOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSetCardStateOperationCompleted);
            }
            this.InvokeAsync("SetCardState", new object[] {
                        UserName,
                        TempNo,
                        CardState}, this.SetCardStateOperationCompleted, userState);
        }
        
        private void OnSetCardStateOperationCompleted(object arg) {
            if ((this.SetCardStateCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SetCardStateCompleted(this, new SetCardStateCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.websystem.com.tw/AddCardStockIn", RequestNamespace="http://www.websystem.com.tw/", ResponseNamespace="http://www.websystem.com.tw/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int AddCardStockIn(string UserName, string[] CardNo, string CardType) {
            object[] results = this.Invoke("AddCardStockIn", new object[] {
                        UserName,
                        CardNo,
                        CardType});
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void AddCardStockInAsync(string UserName, string[] CardNo, string CardType) {
            this.AddCardStockInAsync(UserName, CardNo, CardType, null);
        }
        
        /// <remarks/>
        public void AddCardStockInAsync(string UserName, string[] CardNo, string CardType, object userState) {
            if ((this.AddCardStockInOperationCompleted == null)) {
                this.AddCardStockInOperationCompleted = new System.Threading.SendOrPostCallback(this.OnAddCardStockInOperationCompleted);
            }
            this.InvokeAsync("AddCardStockIn", new object[] {
                        UserName,
                        CardNo,
                        CardType}, this.AddCardStockInOperationCompleted, userState);
        }
        
        private void OnAddCardStockInOperationCompleted(object arg) {
            if ((this.AddCardStockInCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.AddCardStockInCompleted(this, new AddCardStockInCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.websystem.com.tw/DeleteCardStockIn", RequestNamespace="http://www.websystem.com.tw/", ResponseNamespace="http://www.websystem.com.tw/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int DeleteCardStockIn(string UserName, string[] ExtCardNo, string CardType) {
            object[] results = this.Invoke("DeleteCardStockIn", new object[] {
                        UserName,
                        ExtCardNo,
                        CardType});
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void DeleteCardStockInAsync(string UserName, string[] ExtCardNo, string CardType) {
            this.DeleteCardStockInAsync(UserName, ExtCardNo, CardType, null);
        }
        
        /// <remarks/>
        public void DeleteCardStockInAsync(string UserName, string[] ExtCardNo, string CardType, object userState) {
            if ((this.DeleteCardStockInOperationCompleted == null)) {
                this.DeleteCardStockInOperationCompleted = new System.Threading.SendOrPostCallback(this.OnDeleteCardStockInOperationCompleted);
            }
            this.InvokeAsync("DeleteCardStockIn", new object[] {
                        UserName,
                        ExtCardNo,
                        CardType}, this.DeleteCardStockInOperationCompleted, userState);
        }
        
        private void OnDeleteCardStockInOperationCompleted(object arg) {
            if ((this.DeleteCardStockInCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.DeleteCardStockInCompleted(this, new DeleteCardStockInCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.websystem.com.tw/GetEmpGroup", RequestNamespace="http://www.websystem.com.tw/", ResponseNamespace="http://www.websystem.com.tw/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int GetEmpGroup(string UserName, string EmpNo, out string CMSGroup, out string DoorGuardGroup) {
            object[] results = this.Invoke("GetEmpGroup", new object[] {
                        UserName,
                        EmpNo});
            CMSGroup = ((string)(results[1]));
            DoorGuardGroup = ((string)(results[2]));
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void GetEmpGroupAsync(string UserName, string EmpNo) {
            this.GetEmpGroupAsync(UserName, EmpNo, null);
        }
        
        /// <remarks/>
        public void GetEmpGroupAsync(string UserName, string EmpNo, object userState) {
            if ((this.GetEmpGroupOperationCompleted == null)) {
                this.GetEmpGroupOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetEmpGroupOperationCompleted);
            }
            this.InvokeAsync("GetEmpGroup", new object[] {
                        UserName,
                        EmpNo}, this.GetEmpGroupOperationCompleted, userState);
        }
        
        private void OnGetEmpGroupOperationCompleted(object arg) {
            if ((this.GetEmpGroupCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetEmpGroupCompleted(this, new GetEmpGroupCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        public new void CancelAsync(object userState) {
            base.CancelAsync(userState);
        }
        
        private bool IsLocalFileSystemWebService(string url) {
            if (((url == null) 
                        || (url == string.Empty))) {
                return false;
            }
            System.Uri wsUri = new System.Uri(url);
            if (((wsUri.Port >= 1024) 
                        && (string.Compare(wsUri.Host, "localHost", System.StringComparison.OrdinalIgnoreCase) == 0))) {
                return true;
            }
            return false;
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    public delegate void SetDeptCompletedEventHandler(object sender, SetDeptCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class SetDeptCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal SetDeptCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    public delegate void SetEmpCompletedEventHandler(object sender, SetEmpCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class SetEmpCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal SetEmpCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    public delegate void DeleteEmpCompletedEventHandler(object sender, DeleteEmpCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class DeleteEmpCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal DeleteEmpCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    public delegate void SetEmpCardCompletedEventHandler(object sender, SetEmpCardCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class SetEmpCardCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal SetEmpCardCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    public delegate void SetEmpTempCardCompletedEventHandler(object sender, SetEmpTempCardCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class SetEmpTempCardCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal SetEmpTempCardCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    public delegate void SetExtEngineerCardCompletedEventHandler(object sender, SetExtEngineerCardCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class SetExtEngineerCardCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal SetExtEngineerCardCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    public delegate void SetExtCompanyCardCompletedEventHandler(object sender, SetExtCompanyCardCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class SetExtCompanyCardCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal SetExtCompanyCardCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    public delegate void AddCarPassportCompletedEventHandler(object sender, AddCarPassportCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class AddCarPassportCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal AddCarPassportCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    public delegate void DeleteCarPassportCompletedEventHandler(object sender, DeleteCarPassportCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class DeleteCarPassportCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal DeleteCarPassportCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    public delegate void DeleteAllCarPassportCompletedEventHandler(object sender, DeleteAllCarPassportCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class DeleteAllCarPassportCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal DeleteAllCarPassportCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    public delegate void AddGroupEmpsCompletedEventHandler(object sender, AddGroupEmpsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class AddGroupEmpsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal AddGroupEmpsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    public delegate void DeleteGroupEmpsCompletedEventHandler(object sender, DeleteGroupEmpsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class DeleteGroupEmpsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal DeleteGroupEmpsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    public delegate void SetCardStateCompletedEventHandler(object sender, SetCardStateCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class SetCardStateCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal SetCardStateCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    public delegate void AddCardStockInCompletedEventHandler(object sender, AddCardStockInCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class AddCardStockInCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal AddCardStockInCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    public delegate void DeleteCardStockInCompletedEventHandler(object sender, DeleteCardStockInCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class DeleteCardStockInCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal DeleteCardStockInCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    public delegate void GetEmpGroupCompletedEventHandler(object sender, GetEmpGroupCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1038.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetEmpGroupCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetEmpGroupCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string CMSGroup {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
        
        /// <remarks/>
        public string DoorGuardGroup {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[2]));
            }
        }
    }
}

#pragma warning restore 1591